<!DOCTYPE html>
<html lang="en">
  <%- include('./components/Head', { title: 'PokéHeart | Explore' }) %>
<body>
  <%- include('./components/Navbar', { genre: trainer.genre, name: trainer.name, pokedex: false}) %>
  <div class="container p-3 d-flex flex-column justify-content-center">
    <div class="container d-flex justify-content-between align-items-center">
      <div>
        <span class="text-muted">Capturas disponíveis: <span id="captures"><%= trainer.captures %></span></span>
        <h3 class="mt-3">Chance de Capturar:</h3>
      </div>
      <a href="/explore" class="btn btn-primary"><ion-icon name="refresh-outline"></ion-icon></a>
    </div>
    <hr>
    <div class="d-flex flex-wrap">
    <% pokemons.forEach(pokemon => { %>
            <div class="d-flex flex-column align-items-center bg-primary m-4 text-light">
              <img src="<%= pokemon.image %>" class="img-thumbnail m-2" width="100" alt="Pokemon <%= pokemon.name %>">
              <p><%= pokemon.name.toUpperCase() %></p>
            </div>
      <% }) %>
      </div>

      <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Em busca de Pokémons!</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="d-flex flex-column align-items-center m-4">
                <img id="pokemon-image" src="/images/loading.gif" class="img-fluid m-2" width="100" alt="Loading">
                <p id="pokemon-name">Explorando...</p>
                <p id="pokemon-cp" class="d-flex align-items-center"></p>
                <p id="timing" class="text-muted fw-lighter"></p>
              </div>
            </div>
            <div class="modal-footer">
              <button id="soltar" type="button" class="btn btn-danger" data-bs-dismiss="modal" disabled>Soltar</button>
              <button id="capturar-pokemon" type="button" class="btn btn-success"  data-bs-dismiss="modal" disabled>Capturar</button>
            </div>
          </div>
        </div>
      </div>

      <div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
        <div id="liveToast" class="toast text-white bg-success" role="alert" aria-live="assertive" aria-atomic="true">
          <div class="toast-header">
            <!-- <img src="..." class="rounded me-2" alt="..."> -->
            <strong id="message-title" class="me-auto"></strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
          </div>
          <div class="toast-body">
            <p id="capturado-message"></p>
          </div>
        </div>
      </div>

      <% if(trainer.captures === 0) {%>
        <button class="btn btn-danger" disabled>Sem capturas disponíveis</button>
      <% }else{ %>
        <button class="btn btn-primary" id="capturar" data-bs-toggle="modal" data-bs-target="#exampleModal">Iniciar</button>
      <% } %>

      <script>
        const capturar = document.querySelector('#capturar');
        const capturarPokemon = document.querySelector('#capturar-pokemon')
        const toastLiveExample = document.querySelector('#liveToast')
        const messageTitle = document.querySelector('#message-title')
        const message = document.querySelector('#capturado-message');
        const captureCount = document.querySelector('#captures')
        let sendPokemon;

        capturarPokemon.addEventListener('click', async () => {
          const toast = new bootstrap.Toast(toastLiveExample)
          await fetch('/pokemons/', {
            method: 'post',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              pokeName: sendPokemon.name,
              trainerId: Number('<%= trainer.id %>'),
              cp: sendPokemon.cp
            })
          }).then(response => {
            if(response.ok){
              messageTitle.innerHTML = 'Capturado!'
              message.innerHTML = `${sendPokemon.name.toUpperCase()} adicionado a Pokédex.`
              toast.show()
              captureCount.innerHTML = Number(captureCount.textContent) - 1;
            }else{
              toastLiveExample.classList.remove('bg-success')
              toastLiveExample.classList.add('bg-danger')
              messageTitle.innerHTML = 'Erro'
              if(captureCount.textContent === "0"){
                message.innerHTML = `Você não tem capturas disponíveis.`
              }else {
                message.innerHTML = `${sendPokemon.name.toUpperCase()} não foi adicionado`
              }
              toast.show()
            }
          })
        })

        capturar.addEventListener('click', () => {
          const time = Math.floor(Math.random() * 10);
          const soltar = document.querySelector('#soltar')
          const pokemonImage = document.querySelector('#pokemon-image')
          const pokemonName = document.querySelector('#pokemon-name')
          const timing = document.querySelector('#timing')
          const pokemonCp = document.querySelector('#pokemon-cp')
          const cp = Math.floor(Math.random() * 1000);


          pokemonCp.innerHTML = '';
          pokemonImage.setAttribute('src', '/images/loading.gif')
          pokemonName.innerHTML = 'Explorando...'
          capturarPokemon.setAttribute('disabled', '')
          soltar.setAttribute('disabled', '')
          timing.innerHTML = `Termina em ${time + 1} segundos`
          const explorando = setTimeout(() => {
            timing.innerHTML = '';
            const pokemons = <%- JSON.stringify(pokemons)  %>;
            const sort = Math.floor(Math.random() * pokemons.length);
            const capturedPokemon = pokemons[sort]
            sendPokemon = capturedPokemon;
            sendPokemon.cp = cp;
            pokemonImage.setAttribute('src', `${capturedPokemon.image}`)
            pokemonName.innerHTML = capturedPokemon.name.toUpperCase();
            pokemonCp.innerHTML = '<ion-icon name="flash-outline"></ion-icon> ' + cp;
            capturarPokemon.removeAttribute('disabled')
            soltar.removeAttribute('disabled')
          }, 1000 * time + 1)
        });
      </script>
  </div>
  <%- include('./components/Scripts') %>
</body>
</html>
